services:
  # Cache tag checksum backend. Used by redis and most other cache backend
  # to deal with cache tag invalidations.
  cache_tags.invalidator.checksum:
   class: Drupal\redis\Cache\RedisCacheTagsChecksum
   arguments: ['@redis.factory']
   tags:
     - { name: cache_tags_invalidator }

  # Replaces the default lock backend with a redis implementation.
  lock:
    class: Drupal\Core\Lock\LockBackendInterface
    factory: ['@redis.lock.factory', get]

  # Replaces the default persistent lock backend with a redis implementation.
  lock.persistent:
    class: Drupal\Core\Lock\LockBackendInterface
    factory: ['@redis.lock.factory', get]
    arguments: [true]

  # Replaces the default flood backend with a redis implementation.
  flood:
    class: Drupal\Core\Flood\FloodInterface
    factory: ['@redis.flood.factory', get]

parameters:
  cors.config:
    enabled: true
    # Specify allowed headers, like 'x-allowed-header'.
    allowedHeaders: ['*']
    # Specify allowed request methods, specify ['*'] to allow all possible ones.
    allowedMethods: ['*']
    # Configure requests allowed from specific origins.
    allowedOrigins: ['*']
    # Sets the Access-Control-Expose-Headers header.
    exposedHeaders: false
    # Sets the Access-Control-Max-Age header.
    maxAge: false
    # Sets the Access-Control-Allow-Credentials header.
    supportsCredentials: true
