<?php
use Drupal\Core\Form\FormStateInterface;
/**
 * implements hook_field_widget_single_element_paragraphs_form_alter().
 */
function os2uol_entity_forms_field_widget_single_element_paragraphs_form_alter(&$element, FormStateInterface $form_state, $context) {
  // Access the form object, which could be the node form.
  $form_object = $form_state->getFormObject();

  // Check if the form object is an instance of NodeForm.
  if ($form_object instanceof \Drupal\node\NodeForm) {
    // Get the node entity.
    $node = $form_object->getEntity();

    // Retrieve the node type.
    $node_type = $node->getType();

    // Retrieve the paragraph type.
    $paragraph_type = $element['#paragraph_type'];

    // Now you can use the node type to conditionally alter the paragraph field.
    if ($node_type == 'internship' && $paragraph_type == 'material') {
      // Disable the field 'field_literature_suggestion'
      $element['subform']['field_literature_suggestion']['#access'] = FALSE;
    }
  }
}

/**
 * Implements hook_node_form_alter().
 */
function os2uol_entity_forms_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Check if the form is the node course or course_educators add or edit form and hide the hours and minutes from period field.
  if (in_array($form_id, array('node_course_form', 'node_course_edit_form', 'node_course_educators_form', 'node_course_educators_edit_form'))) {
    $form['field_period']['widget'][0]['value']['#date_time_element'] = 'none';
    $form['field_period']['widget'][0]['value']['#date_time_format'] = '';
    $form['field_period']['widget'][0]['end_value']['#date_time_element'] = 'none';
    $form['field_period']['widget'][0]['end_value']['#date_time_format'] = '';
    // Hide time part of registration deadline date field.
    $form['field_registration_deadline']['widget'][0]['value']['#date_time_element'] = 'none';
    $form['field_registration_deadline']['widget'][0]['value']['#date_time_format'] = '';
  }

  // Hide time part of application deadline date field.
  if (in_array($form_id, array('node_internship_form', 'node_internship_edit_form'))) {
    $form['field_application_deadline']['widget'][0]['value']['#date_time_element'] = 'none';
    $form['field_application_deadline']['widget'][0]['value']['#date_time_format'] = '';
  }

  // If user_register_form or user_form.
  if ($form_id == 'user_register_form' || $form_id == 'user_form') {
    // Get current logged in user.
    $current_user = \Drupal::currentUser();

    //Get edit form user id from url.
    $edit_user = \Drupal::routeMatch()->getParameter('user');

    // Attach library for jQuery functionality.
    $form['#attached']['library'][] = 'os2uol_entity_forms/user-edit-form-alter';

    // Hidden fields for user role editor.
    $editor_hidden_fields = [
      'field_presentation',
      'field_educational_profile',
      'field_intro',
      'field_contact',
      'field_phone',
      'field_mail',
      'field_cvr',
      'field_homepage',
      'field_other_info_description',
      'field_other_info',
      'field_image',
      'field_logo',
      'field_video',
      'field_video_title',
      'field_video_description',
      'field_view_on_map',
      'field_location_street',
      'field_location_name',
      'field_location_zipcode',
      'field_location_city',
      'field_pretix_enabled',
      'field_pretix_url',
      'field_pretix_api_token',
      'field_pretix_organizer_form',
      'field_pretix_event_form',
      'field_allocated_budget',
      'field_guarantee_partner',
      'field_brancher',
      'field_posibilities',
      'field_postnummer',
      'field_editor_field',
      'field_bypass_workflow',
    ];

    // Hide fields for user role editor.
    if ($current_user->hasRole('editor')){
      if ($edit_user && $current_user->id() == $edit_user->id()) {
        $form['account']['status']['#access'] = FALSE;
        foreach ($editor_hidden_fields as $field) {
          if (isset($form[$field])) {
            $form[$field]['#access'] = FALSE;
          }
        }
      }
    }

    // Hidden fields for user role course_provider.
    $course_provider_hidden_fields = [
      'field_pretix_enabled',
      'field_pretix_url',
      'field_pretix_api_token',
      'field_pretix_organizer_form',
      'field_pretix_event_form',
      'field_allocated_budget',
      'field_guarantee_partner',
      'field_brancher',
      'field_posibilities',
      'field_postnummer',
      'field_editor_field',
      'field_bypass_workflow',
    ];

    // Hide fields for user role course_provider.
    if ($current_user->hasRole('course_provider')) {
      foreach ($course_provider_hidden_fields as $field) {
        if (isset($form[$field])) {
          $form[$field]['#access'] = FALSE;
        }
      }
    }

    // Hidden fields for user role place_of_visit.
    $place_of_visit_hidden_fields = [
      'field_pretix_enabled',
      'field_pretix_url',
      'field_pretix_api_token',
      'field_pretix_organizer_form',
      'field_pretix_event_form',
      'field_allocated_budget',
      'field_guarantee_partner',
      'field_brancher',
      'field_posibilities',
      'field_postnummer',
      'field_editor_field',
      'field_bypass_workflow',
    ];

    // Hide fields for user role place_of_visit.
    if ($current_user->hasRole('place_of_visit')) {
      foreach ($place_of_visit_hidden_fields as $field) {
        if (isset($form[$field])) {
          $form[$field]['#access'] = FALSE;
        }
      }
    }

    // Hidden fields for user role corporation.
    $corporation_hidden_fields = [
      'field_educational_profile',
      'field_intro',
      'field_pretix_enabled',
      'field_pretix_url',
      'field_pretix_api_token',
      'field_pretix_organizer_form',
      'field_pretix_event_form',
      'field_allocated_budget',
      'field_guarantee_partner',
      'field_editor_field',
      'field_bypass_workflow',
    ];

    // Hide fields for user role corporation.
    if ($current_user->hasRole('corporation')) {
      foreach ($corporation_hidden_fields as $field) {
        if (isset($form[$field])) {
          $form[$field]['#access'] = FALSE;
        }
      }
    }

    // Hidden fields for user role school.
    $school_hidden_fields = [
      'field_presentation',
      'field_educational_profile',
      'field_intro',
      'field_contact',
      'field_phone',
      'field_mail',
      'field_cvr',
      'field_homepage',
      'field_other_info_description',
      'field_other_info',
      'field_image',
      'field_logo',
      'field_video',
      'field_video_title',
      'field_video_description',
      'field_view_on_map',
      'field_pretix_enabled',
      'field_pretix_url',
      'field_pretix_api_token',
      'field_pretix_organizer_form',
      'field_pretix_event_form',
      'field_allocated_budget',
      'field_guarantee_partner',
      'field_brancher',
      'field_posibilities',
      'field_postnummer',
      'field_editor_field',
      'field_bypass_workflow',
    ];

    // Hide fields for user role school.
    if ($current_user->hasRole('school')) {
      foreach ($school_hidden_fields as $field) {
        if (isset($form[$field])) {
          $form[$field]['#access'] = FALSE;
        }
      }
    }

    // Hidden fields for user role institution.
    $institution_hidden_fields = [
      'field_presentation',
      'field_educational_profile',
      'field_intro',
      'field_contact',
      'field_phone',
      'field_mail',
      'field_cvr',
      'field_homepage',
      'field_other_info_description',
      'field_other_info',
      'field_image',
      'field_logo',
      'field_video',
      'field_video_title',
      'field_video_description',
      'field_view_on_map',
      'field_pretix_enabled',
      'field_pretix_url',
      'field_pretix_api_token',
      'field_pretix_organizer_form',
      'field_pretix_event_form',
      'field_allocated_budget',
      'field_guarantee_partner',
      'field_brancher',
      'field_posibilities',
      'field_postnummer',
      'field_editor_field',
      'field_bypass_workflow',
    ];

    // Hide fields for user role institution.
    if ($current_user->hasRole('institution')) {
      foreach ($institution_hidden_fields as $field) {
        if (isset($form[$field])) {
          $form[$field]['#access'] = FALSE;
        }
      }
    }

    // Hidden fields for user role theater_contact.
    $theater_contact_hidden_fields = [
      'field_presentation',
      'field_educational_profile',
      'field_intro',
      'field_contact',
      'field_phone',
      'field_mail',
      'field_cvr',
      'field_homepage',
      'field_other_info_description',
      'field_other_info',
      'field_image',
      'field_logo',
      'field_video',
      'field_video_title',
      'field_video_description',
      'field_view_on_map',
      'field_location_street',
      'field_location_name',
      'field_location_zipcode',
      'field_location_city',
      'field_pretix_enabled',
      'field_pretix_url',
      'field_pretix_api_token',
      'field_pretix_organizer_form',
      'field_pretix_event_form',
      'field_allocated_budget',
      'field_guarantee_partner',
      'field_brancher',
      'field_posibilities',
      'field_postnummer',
      'field_editor_field',
      'field_bypass_workflow',
    ];

    // Hide fields for user role theater_contact.
    if ($current_user->hasRole('theater_contact')) {
      foreach ($theater_contact_hidden_fields as $field) {
        if (isset($form[$field])) {
          $form[$field]['#access'] = FALSE;
        }
      }
    }
  }
}
