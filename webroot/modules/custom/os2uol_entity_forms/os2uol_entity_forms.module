<?php
use Drupal\Core\Form\FormStateInterface;
/**
 * implements hook_field_widget_single_element_paragraphs_form_alter().
 */
function os2uol_entity_forms_field_widget_single_element_paragraphs_form_alter(&$element, FormStateInterface $form_state, $context) {
  // Access the form object, which could be the node form.
  $form_object = $form_state->getFormObject();

  // Check if the form object is an instance of NodeForm.
  if ($form_object instanceof \Drupal\node\NodeForm) {
    // Get the node entity.
    $node = $form_object->getEntity();

    // Retrieve the node type.
    $node_type = $node->getType();

    // Retrieve the paragraph type.
    $paragraph_type = $element['#paragraph_type'];

    // Now you can use the node type to conditionally alter the paragraph field.
    if ($node_type == 'internship' && $paragraph_type == 'material') {
      // Disable the field 'field_literature_suggestion'
      $element['subform']['field_literature_suggestion']['#access'] = FALSE;
    }
  }
}

/**
 * Implements hook_node_form_alter().
 */
function os2uol_entity_forms_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Check if the form is the node course or course_educators add or edit form and hide the hours and minutes from period field.
  if (in_array($form_id, array('node_course_form', 'node_course_edit_form', 'node_course_educators_form', 'node_course_educators_edit_form'))) {
    $form['field_period']['widget'][0]['value']['#date_time_element'] = 'none';
    $form['field_period']['widget'][0]['value']['#date_time_format'] = '';
    $form['field_period']['widget'][0]['end_value']['#date_time_element'] = 'none';
    $form['field_period']['widget'][0]['end_value']['#date_time_format'] = '';
  }

  // Hide time part of application deadline date field.
  if (in_array($form_id, array('node_internship_form', 'node_internship_edit_form'))) {
    $form['field_application_deadline']['widget'][0]['value']['#date_time_element'] = 'none';
    $form['field_application_deadline']['widget'][0]['value']['#date_time_format'] = '';
  }

  if ($form_id == 'user_register_form' || $form_id == 'user_form') {
    $form['account']['roles']['#access'] = FALSE;
    unset($form['field_roles']['widget']['#options']['anonymous']);
    unset($form['field_roles']['widget']['#options']['authenticated']);
    // Add submit handler to the form to populate the roles field with the placeholder field value.
    array_unshift($form['#submit'], 'os2uol_entity_forms_user_submit');
    array_unshift($form['actions']['submit']['#submit'], 'os2uol_entity_forms_user_submit');
  }
}

function os2uol_entity_forms_user_submit($form, FormStateInterface $form_state) {
  $form_state->setValue('roles', $form_state->getValue('field_roles'));
}
